// DO NOT EDIT: This file is autogenerated via the builtin command.

package discord

import (
	ast "github.com/influxdata/flux/ast"
	runtime "github.com/influxdata/flux/runtime"
)

func init() {
	runtime.RegisterPackage(pkgAST)
}

var pkgAST = &ast.Package{
	BaseNode: ast.BaseNode{
		Errors: nil,
		Loc:    nil,
	},
	Files: []*ast.File{&ast.File{
		BaseNode: ast.BaseNode{
			Errors: nil,
			Loc: &ast.SourceLocation{
				End: ast.Position{
					Column: 2,
					Line:   21,
				},
				File:   "discord.flux",
				Source: "package discord\n\nimport \"http\"\nimport \"json\"\n\n// `url` - string - URL of the discord webhook endpoint\n// `username` - string - Username posting the message.\n// `content` - string - The text to display in discord.\n\nsend = (url, username, content) => {\n  data = {\n      username: username,\n      content: content\n    }\n\n  headers = {\n      \"Content-Type\": \"application/json\"\n    }\n  encode = json.encode(v:data)\n  return http.post(headers: headers, url: url, data: encode)\n}",
				Start: ast.Position{
					Column: 1,
					Line:   1,
				},
			},
		},
		Body: []ast.Statement{&ast.VariableAssignment{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 2,
						Line:   21,
					},
					File:   "discord.flux",
					Source: "send = (url, username, content) => {\n  data = {\n      username: username,\n      content: content\n    }\n\n  headers = {\n      \"Content-Type\": \"application/json\"\n    }\n  encode = json.encode(v:data)\n  return http.post(headers: headers, url: url, data: encode)\n}",
					Start: ast.Position{
						Column: 1,
						Line:   10,
					},
				},
			},
			ID: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 5,
							Line:   10,
						},
						File:   "discord.flux",
						Source: "send",
						Start: ast.Position{
							Column: 1,
							Line:   10,
						},
					},
				},
				Name: "send",
			},
			Init: &ast.FunctionExpression{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 2,
							Line:   21,
						},
						File:   "discord.flux",
						Source: "(url, username, content) => {\n  data = {\n      username: username,\n      content: content\n    }\n\n  headers = {\n      \"Content-Type\": \"application/json\"\n    }\n  encode = json.encode(v:data)\n  return http.post(headers: headers, url: url, data: encode)\n}",
						Start: ast.Position{
							Column: 8,
							Line:   10,
						},
					},
				},
				Body: &ast.Block{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 2,
								Line:   21,
							},
							File:   "discord.flux",
							Source: "{\n  data = {\n      username: username,\n      content: content\n    }\n\n  headers = {\n      \"Content-Type\": \"application/json\"\n    }\n  encode = json.encode(v:data)\n  return http.post(headers: headers, url: url, data: encode)\n}",
							Start: ast.Position{
								Column: 36,
								Line:   10,
							},
						},
					},
					Body: []ast.Statement{&ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   14,
								},
								File:   "discord.flux",
								Source: "data = {\n      username: username,\n      content: content\n    }",
								Start: ast.Position{
									Column: 3,
									Line:   11,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 7,
										Line:   11,
									},
									File:   "discord.flux",
									Source: "data",
									Start: ast.Position{
										Column: 3,
										Line:   11,
									},
								},
							},
							Name: "data",
						},
						Init: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 6,
										Line:   14,
									},
									File:   "discord.flux",
									Source: "{\n      username: username,\n      content: content\n    }",
									Start: ast.Position{
										Column: 10,
										Line:   11,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 25,
											Line:   12,
										},
										File:   "discord.flux",
										Source: "username: username",
										Start: ast.Position{
											Column: 7,
											Line:   12,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 15,
												Line:   12,
											},
											File:   "discord.flux",
											Source: "username",
											Start: ast.Position{
												Column: 7,
												Line:   12,
											},
										},
									},
									Name: "username",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 25,
												Line:   12,
											},
											File:   "discord.flux",
											Source: "username",
											Start: ast.Position{
												Column: 17,
												Line:   12,
											},
										},
									},
									Name: "username",
								},
							}, &ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 23,
											Line:   13,
										},
										File:   "discord.flux",
										Source: "content: content",
										Start: ast.Position{
											Column: 7,
											Line:   13,
										},
									},
								},
								Key: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 14,
												Line:   13,
											},
											File:   "discord.flux",
											Source: "content",
											Start: ast.Position{
												Column: 7,
												Line:   13,
											},
										},
									},
									Name: "content",
								},
								Value: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 23,
												Line:   13,
											},
											File:   "discord.flux",
											Source: "content",
											Start: ast.Position{
												Column: 16,
												Line:   13,
											},
										},
									},
									Name: "content",
								},
							}},
							With: nil,
						},
					}, &ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 6,
									Line:   18,
								},
								File:   "discord.flux",
								Source: "headers = {\n      \"Content-Type\": \"application/json\"\n    }",
								Start: ast.Position{
									Column: 3,
									Line:   16,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 10,
										Line:   16,
									},
									File:   "discord.flux",
									Source: "headers",
									Start: ast.Position{
										Column: 3,
										Line:   16,
									},
								},
							},
							Name: "headers",
						},
						Init: &ast.ObjectExpression{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 6,
										Line:   18,
									},
									File:   "discord.flux",
									Source: "{\n      \"Content-Type\": \"application/json\"\n    }",
									Start: ast.Position{
										Column: 13,
										Line:   16,
									},
								},
							},
							Properties: []*ast.Property{&ast.Property{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 41,
											Line:   17,
										},
										File:   "discord.flux",
										Source: "\"Content-Type\": \"application/json\"",
										Start: ast.Position{
											Column: 7,
											Line:   17,
										},
									},
								},
								Key: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 21,
												Line:   17,
											},
											File:   "discord.flux",
											Source: "\"Content-Type\"",
											Start: ast.Position{
												Column: 7,
												Line:   17,
											},
										},
									},
									Value: "Content-Type",
								},
								Value: &ast.StringLiteral{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 41,
												Line:   17,
											},
											File:   "discord.flux",
											Source: "\"application/json\"",
											Start: ast.Position{
												Column: 23,
												Line:   17,
											},
										},
									},
									Value: "application/json",
								},
							}},
							With: nil,
						},
					}, &ast.VariableAssignment{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 31,
									Line:   19,
								},
								File:   "discord.flux",
								Source: "encode = json.encode(v:data)",
								Start: ast.Position{
									Column: 3,
									Line:   19,
								},
							},
						},
						ID: &ast.Identifier{
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 9,
										Line:   19,
									},
									File:   "discord.flux",
									Source: "encode",
									Start: ast.Position{
										Column: 3,
										Line:   19,
									},
								},
							},
							Name: "encode",
						},
						Init: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 30,
											Line:   19,
										},
										File:   "discord.flux",
										Source: "v:data",
										Start: ast.Position{
											Column: 24,
											Line:   19,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 30,
												Line:   19,
											},
											File:   "discord.flux",
											Source: "v:data",
											Start: ast.Position{
												Column: 24,
												Line:   19,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 25,
													Line:   19,
												},
												File:   "discord.flux",
												Source: "v",
												Start: ast.Position{
													Column: 24,
													Line:   19,
												},
											},
										},
										Name: "v",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 30,
													Line:   19,
												},
												File:   "discord.flux",
												Source: "data",
												Start: ast.Position{
													Column: 26,
													Line:   19,
												},
											},
										},
										Name: "data",
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 31,
										Line:   19,
									},
									File:   "discord.flux",
									Source: "json.encode(v:data)",
									Start: ast.Position{
										Column: 12,
										Line:   19,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 23,
											Line:   19,
										},
										File:   "discord.flux",
										Source: "json.encode",
										Start: ast.Position{
											Column: 12,
											Line:   19,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 16,
												Line:   19,
											},
											File:   "discord.flux",
											Source: "json",
											Start: ast.Position{
												Column: 12,
												Line:   19,
											},
										},
									},
									Name: "json",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 23,
												Line:   19,
											},
											File:   "discord.flux",
											Source: "encode",
											Start: ast.Position{
												Column: 17,
												Line:   19,
											},
										},
									},
									Name: "encode",
								},
							},
						},
					}, &ast.ReturnStatement{
						Argument: &ast.CallExpression{
							Arguments: []ast.Expression{&ast.ObjectExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 60,
											Line:   20,
										},
										File:   "discord.flux",
										Source: "headers: headers, url: url, data: encode",
										Start: ast.Position{
											Column: 20,
											Line:   20,
										},
									},
								},
								Properties: []*ast.Property{&ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 36,
												Line:   20,
											},
											File:   "discord.flux",
											Source: "headers: headers",
											Start: ast.Position{
												Column: 20,
												Line:   20,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 27,
													Line:   20,
												},
												File:   "discord.flux",
												Source: "headers",
												Start: ast.Position{
													Column: 20,
													Line:   20,
												},
											},
										},
										Name: "headers",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 36,
													Line:   20,
												},
												File:   "discord.flux",
												Source: "headers",
												Start: ast.Position{
													Column: 29,
													Line:   20,
												},
											},
										},
										Name: "headers",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 46,
												Line:   20,
											},
											File:   "discord.flux",
											Source: "url: url",
											Start: ast.Position{
												Column: 38,
												Line:   20,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 41,
													Line:   20,
												},
												File:   "discord.flux",
												Source: "url",
												Start: ast.Position{
													Column: 38,
													Line:   20,
												},
											},
										},
										Name: "url",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 46,
													Line:   20,
												},
												File:   "discord.flux",
												Source: "url",
												Start: ast.Position{
													Column: 43,
													Line:   20,
												},
											},
										},
										Name: "url",
									},
								}, &ast.Property{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 60,
												Line:   20,
											},
											File:   "discord.flux",
											Source: "data: encode",
											Start: ast.Position{
												Column: 48,
												Line:   20,
											},
										},
									},
									Key: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 52,
													Line:   20,
												},
												File:   "discord.flux",
												Source: "data",
												Start: ast.Position{
													Column: 48,
													Line:   20,
												},
											},
										},
										Name: "data",
									},
									Value: &ast.Identifier{
										BaseNode: ast.BaseNode{
											Errors: nil,
											Loc: &ast.SourceLocation{
												End: ast.Position{
													Column: 60,
													Line:   20,
												},
												File:   "discord.flux",
												Source: "encode",
												Start: ast.Position{
													Column: 54,
													Line:   20,
												},
											},
										},
										Name: "encode",
									},
								}},
								With: nil,
							}},
							BaseNode: ast.BaseNode{
								Errors: nil,
								Loc: &ast.SourceLocation{
									End: ast.Position{
										Column: 61,
										Line:   20,
									},
									File:   "discord.flux",
									Source: "http.post(headers: headers, url: url, data: encode)",
									Start: ast.Position{
										Column: 10,
										Line:   20,
									},
								},
							},
							Callee: &ast.MemberExpression{
								BaseNode: ast.BaseNode{
									Errors: nil,
									Loc: &ast.SourceLocation{
										End: ast.Position{
											Column: 19,
											Line:   20,
										},
										File:   "discord.flux",
										Source: "http.post",
										Start: ast.Position{
											Column: 10,
											Line:   20,
										},
									},
								},
								Object: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 14,
												Line:   20,
											},
											File:   "discord.flux",
											Source: "http",
											Start: ast.Position{
												Column: 10,
												Line:   20,
											},
										},
									},
									Name: "http",
								},
								Property: &ast.Identifier{
									BaseNode: ast.BaseNode{
										Errors: nil,
										Loc: &ast.SourceLocation{
											End: ast.Position{
												Column: 19,
												Line:   20,
											},
											File:   "discord.flux",
											Source: "post",
											Start: ast.Position{
												Column: 15,
												Line:   20,
											},
										},
									},
									Name: "post",
								},
							},
						},
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 61,
									Line:   20,
								},
								File:   "discord.flux",
								Source: "return http.post(headers: headers, url: url, data: encode)",
								Start: ast.Position{
									Column: 3,
									Line:   20,
								},
							},
						},
					}},
				},
				Params: []*ast.Property{&ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 12,
								Line:   10,
							},
							File:   "discord.flux",
							Source: "url",
							Start: ast.Position{
								Column: 9,
								Line:   10,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 12,
									Line:   10,
								},
								File:   "discord.flux",
								Source: "url",
								Start: ast.Position{
									Column: 9,
									Line:   10,
								},
							},
						},
						Name: "url",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 22,
								Line:   10,
							},
							File:   "discord.flux",
							Source: "username",
							Start: ast.Position{
								Column: 14,
								Line:   10,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 22,
									Line:   10,
								},
								File:   "discord.flux",
								Source: "username",
								Start: ast.Position{
									Column: 14,
									Line:   10,
								},
							},
						},
						Name: "username",
					},
					Value: nil,
				}, &ast.Property{
					BaseNode: ast.BaseNode{
						Errors: nil,
						Loc: &ast.SourceLocation{
							End: ast.Position{
								Column: 31,
								Line:   10,
							},
							File:   "discord.flux",
							Source: "content",
							Start: ast.Position{
								Column: 24,
								Line:   10,
							},
						},
					},
					Key: &ast.Identifier{
						BaseNode: ast.BaseNode{
							Errors: nil,
							Loc: &ast.SourceLocation{
								End: ast.Position{
									Column: 31,
									Line:   10,
								},
								File:   "discord.flux",
								Source: "content",
								Start: ast.Position{
									Column: 24,
									Line:   10,
								},
							},
						},
						Name: "content",
					},
					Value: nil,
				}},
			},
		}},
		Imports: []*ast.ImportDeclaration{&ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   3,
					},
					File:   "discord.flux",
					Source: "import \"http\"",
					Start: ast.Position{
						Column: 1,
						Line:   3,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   3,
						},
						File:   "discord.flux",
						Source: "\"http\"",
						Start: ast.Position{
							Column: 8,
							Line:   3,
						},
					},
				},
				Value: "http",
			},
		}, &ast.ImportDeclaration{
			As: nil,
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 14,
						Line:   4,
					},
					File:   "discord.flux",
					Source: "import \"json\"",
					Start: ast.Position{
						Column: 1,
						Line:   4,
					},
				},
			},
			Path: &ast.StringLiteral{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 14,
							Line:   4,
						},
						File:   "discord.flux",
						Source: "\"json\"",
						Start: ast.Position{
							Column: 8,
							Line:   4,
						},
					},
				},
				Value: "json",
			},
		}},
		Metadata: "parser-type=rust",
		Name:     "discord.flux",
		Package: &ast.PackageClause{
			BaseNode: ast.BaseNode{
				Errors: nil,
				Loc: &ast.SourceLocation{
					End: ast.Position{
						Column: 16,
						Line:   1,
					},
					File:   "discord.flux",
					Source: "package discord",
					Start: ast.Position{
						Column: 1,
						Line:   1,
					},
				},
			},
			Name: &ast.Identifier{
				BaseNode: ast.BaseNode{
					Errors: nil,
					Loc: &ast.SourceLocation{
						End: ast.Position{
							Column: 16,
							Line:   1,
						},
						File:   "discord.flux",
						Source: "discord",
						Start: ast.Position{
							Column: 9,
							Line:   1,
						},
					},
				},
				Name: "discord",
			},
		},
	}},
	Package: "discord",
	Path:    "contrib/chobbs/discord",
}
